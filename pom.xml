<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.dragonet.proxy</groupId>
    <artifactId>dragonproxy</artifactId>
    <version>0.4.0.0-rewrite-dev</version>

    <name>DragonProxy</name>
    <description>A proxy to allow Minecraft: Bedrock clients to connect to Minecraft: Java Edition servers.</description>
    <inceptionYear>2016</inceptionYear>
    <url>https://dragonet.org/</url>

    <organization>
        <name>DragonetMC</name>
        <url>https://github.com/DragonetMC/DragonProxy</url>
    </organization>

    <scm>
        <connection>scm:git:https://github.com/DragonetMC/DragonProxy.git</connection>
        <developerConnection>scm:git:git@github.com:DragonetMC/DragonProxy.git</developerConnection>
        <url>https://github.com/DragonetMC/DragonProxy</url>
    </scm>

    <ciManagement>
        <system>jenkins</system>
        <url>https://ci.codemc.org/job/DragonetMC/job/DragonProxy</url>
    </ciManagement>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/DragonetMC/DragonProxy/issues</url>
    </issueManagement>

    <distributionManagement>
        <snapshotRepository>
            <id>codemc-snapshots</id>
            <url>https://repo.codemc.org/repository/maven-snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>codemc-releases</id>
            <url>https://repo.codemc.org/repository/maven-releases/</url>
        </repository>
    </distributionManagement>

    <licenses>
        <license>
            <name>The GNU General Public Licence version 3 (GPLv3)</name>
            <url>http://www.gnu.org/licenses/gpl-3.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <!-- Environment properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <jdk.version>1.8</jdk.version>
        <maven.minimumVersion>3.3.9</maven.minimumVersion>

        <!-- Versioning properties -->
        <project.buildNumber>CUSTOM</project.buildNumber>
        <project.versionCode>${project.version}-b${project.buildNumber}</project.versionCode>
    </properties>

    <!-- Jenkins profile -->
    <profiles>
        <!-- Set the buildNumber using the jenkins env. variable -->
        <profile>
            <id>jenkins</id>
            <activation>
                <property>
                    <name>env.BUILD_NUMBER</name>
                </property>
            </activation>
            <properties>
                <project.buildNumber>${env.BUILD_NUMBER}</project.buildNumber>
            </properties>
        </profile>
    </profiles>

    <pluginRepositories>
        <pluginRepository>
            <id>oss.sonatype.org</id>
            <url>https://oss.sonatype.org/content/groups/staging</url>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>codemc-repo</id>
            <url>https://repo.codemc.org/repository/maven-public</url>
        </repository>
        <repository>
            <id>nukkitx-repo</id>
            <url>https://repo.nukkitx.com/snapshot/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.10</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.8.2</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.2</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.8.2</version>
        </dependency>
        <!-- Common annotations -->
        <!-- Checker qual, contains @NonNull -->
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
            <version>2.6.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.11.2</version>
        </dependency>
        <!-- Guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>27.0.1-jre</version>
        </dependency>
        <!-- GSON -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>
        <!-- Apache commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
        </dependency>

        <!-- Dependencies -->
        <!-- Command line arguments parser -->
        <dependency>
            <groupId>net.sf.jopt-simple</groupId>
            <artifactId>jopt-simple</artifactId>
            <version>5.0.4</version>
        </dependency>
        <!-- Terminal console appender -->
        <dependency>
            <groupId>net.minecrell</groupId>
            <artifactId>terminalconsoleappender</artifactId>
            <version>1.1.1</version>
        </dependency>
        <!-- Dependency injection library -->
        <dependency>
            <groupId>ch.jalu</groupId>
            <artifactId>injector</artifactId>
            <version>1.0</version>
        </dependency>
        <!-- Configuration library -->
        <dependency>
            <groupId>ch.jalu</groupId>
            <artifactId>configme</artifactId>
            <version>1.0.1</version>
        </dependency>
        <!-- EventBus library -->
        <dependency>
            <groupId>net.kyori</groupId>
            <artifactId>event-method-asm</artifactId>
            <version>3.0.0</version>
        </dependency>
        <!-- Netty networking library -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.33.Final</version>
        </dependency>
        <!-- RakNet networking library -->
        <dependency>
            <groupId>com.whirvis</groupId>
            <artifactId>jraknet</artifactId>
            <version>2.10.7</version>
            <exclusions>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-handler</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Minecraft Java networking library -->
        <dependency>
            <groupId>com.github.steveice10</groupId>
            <artifactId>mcprotocollib</artifactId>
            <version>1.13.1-1-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>com.github.steveice10</groupId>
                    <artifactId>opennbt</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.github.steveice10</groupId>
                    <artifactId>packetlib</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.github.steveice10</groupId>
                    <artifactId>mcauthlib</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.steveice10</groupId>
            <artifactId>opennbt</artifactId>
            <version>1.2-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.github.steveice10</groupId>
            <artifactId>packetlib</artifactId>
            <version>1.4-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.steveice10</groupId>
            <artifactId>mcauthlib</artifactId>
            <version>1.1-SNAPSHOT</version>
        </dependency>
        <!-- Text api -->
        <dependency>
            <groupId>net.kyori</groupId>
            <artifactId>text</artifactId>
            <version>1.12-1.6.5</version>
        </dependency>
        <!-- Nukkit -->
        <dependency>
            <groupId>com.nukkitx.protocol</groupId>
            <artifactId>bedrock-common</artifactId>
            <version>1.1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.nukkitx.protocol</groupId>
            <artifactId>bedrock-v332</artifactId>
            <version>1.1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.nukkitx.protocol</groupId>
            <artifactId>bedrock-v313</artifactId>
            <version>1.1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.nukkitx.protocol</groupId>
            <artifactId>bedrock-v291</artifactId>
            <version>1.1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>

        <!-- Runtime dependencies -->
        <!-- Logger implementation -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.11.2</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.4.2</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.11.2</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>clean install</defaultGoal>
        <resources>
            <resource>
                <directory>${project.basedir}</directory>
                <filtering>false</filtering>
                <includes>
                    <include>LICENSE</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources/</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- Enforce build environment -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <configuration>
                    <rules>
                        <requireMavenVersion>
                            <version>${maven.minimumVersion}</version>
                        </requireMavenVersion>
                    </rules>
                    <fail>true</fail>
                </configuration>
                <executions>
                    <execution>
                        <id>enforce-environment</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Clean the target folder content -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>
            <!-- License header plugin -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <header>licenseheader.txt</header>
                    <includes>
                        <include>src/test/java/**</include>
                        <include>src/main/java/**</include>
                    </includes>
                    <mapping>
                        <java>SLASHSTAR_STYLE</java>
                    </mapping>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>
            <!-- Include resource files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>
            <!-- Compile and include classes -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <!-- Unit testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
                <configuration>
                    <!-- Don't trim stack traces -->
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
            </plugin>
            <!-- Generate a jar containing classes and resources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.dragonet.proxy.DragonProxyBootstrap</mainClass>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Version>${project.versionCode}</Implementation-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <!-- Generate a jar containing the source javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Generate a jar containing the java sources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Generate a jar containing classes, resources and shaded libraries -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <dependencies>
                    <dependency>
                        <groupId>com.github.edwgiz</groupId>
                        <artifactId>maven-shade-plugin.log4j2-cachefile-transformer</artifactId>
                        <version>2.8.1</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <filters>
                        <!-- Ignore manifest signatures for shading the project into an uber-jar to fix -->
                        <!-- "Invalid signature file digest for Manifest main attributes" -->
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <transformers>
                        <transformer
                                implementation="com.github.edwgiz.mavenShadePlugin.log4j2CacheTransformer.PluginsCacheFileTransformer"/>
                    </transformers>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Install the jars as artifacts into the local repository -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>
            <!-- Deploy the jars as artifacts into the remote repository -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
            </plugin>
        </plugins>
    </build>
</project>
